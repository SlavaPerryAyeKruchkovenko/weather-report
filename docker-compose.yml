services:

  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: weather-report
    ports:
      - "5742:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rabbitMQ:
    image: rabbitmq:3-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: 12345
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:15672" ]
      interval: 30s
      timeout: 10s
      retries: 5

  producer:
    build:
      context: ./weather-producer
      dockerfile: Dockerfile
    environment:
      SPRING_RABBITMQ_USERNAME: root
      SPRING_RABBITMQ_PASSWORD: 12345
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/weather-report
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 12345
      CITY_API: "https://geocoding-api.open-meteo.com/v1/"
      YANDEX_API: "https://api.weather.yandex.ru/v2/"
      YANDEX_API_KEY: "2962c31e-7a37-4071-ab1f-2b10fddb5b08"
      METEO_API: "https://api.open-meteo.com/v1/"
      COUNTRIES_LIST: "Moscow,RU;Berlin,DE;Chelyabinsk,RU"
      SERVER_INTERVAL_SECONDS: 300
    depends_on:
      - db
      - rabbitMQ
    ports:
      - "8082:8082"

volumes:
  postgres_data: